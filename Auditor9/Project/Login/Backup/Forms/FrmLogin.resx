<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCADsATcDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDweiiivfMgooooAKKKKACiiigAoop8MMlxPHBCpeWRgiKO5JwB
        QBa0nSrvW9WtdMsI/MurmQRxrnHJ9fbvX1t8NvAVt4F0DyPlk1C52vdTYGS2Pug/3Rzj6msb4UfDKDwh
        p8ep6ggfWbhAWO7IhU/wj3wea9NrycRX9o7LYtKwUUUVzFBRRRQAUUUUAFFFFABRRWZ4g1/TvDOjTarq
        k3lWsWMkDJJJwAB3NCVwI/EniXS/CmkvqWq3AihXhRjLO2CQoHqcV8h+M/Gep+NNblvr2aQQZxBbbjsi
        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
        UAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf/2Q==
</value>
  </data>
</root>