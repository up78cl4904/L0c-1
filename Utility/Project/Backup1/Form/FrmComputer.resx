<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>